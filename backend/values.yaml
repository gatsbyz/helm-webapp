apiVersion: v2

replicaCount: 1

backend:
  name: backend
  group: api
  container:
    port: 4002
  service:
    type: ClusterIP
    port: 4002
  image:
    repository: ghcr.io/gatsbyz/node-app
    pullPolicy: Always
    tag: latest
  config:
    name: backend-config
    data:
       - key: key
         value: value

postgres:
  secretName: postgres-secret
  username: postgresql-username
  password: postgresql-password
  database: consensys
  host: postgres
  port: 5432

frontend:
  name: frontend
  group: client

  service:
    type: ClusterIP
    port: 3000
    # This will by default point out to 
    # `containerPort: 80` from section: image
    # nodePort: 30333
  image:
    repository: ghcr.io/gatsbyz/nextjs-app
    tag: latest
    pullPolicy: Always
    # This will be Nginx serving 
    # react app static content *.html, *.js, *.css
    containerPort: 3000

nameOverride: ""
fullnameOverride: ""

readinessProbe:
  path: /

livenessProbe:
  path: /

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}

ingress:
  enabled: true
  # className: nginx
  annotations: {
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  }
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}