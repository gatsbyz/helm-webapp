apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}
  labels:
    app: {{ .Values.backend.name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.backend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.name }}
    spec:
      containers:
        - name: {{ .Values.backend.name }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.backend.container.port }}
              name: http # added
          livenessProbe:
            httpGet:
              path: /api/health
              port: {{ .Values.backend.service.port }}
            initialDelaySeconds: 4
          readinessProbe:
            httpGet:
              path: /api/health
              port: {{ .Values.backend.service.port }}
            initialDelaySeconds: 4
          env:
            - name: POSTGRES_HOST
              value: {{ .Values.postgres.host }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgres.port | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretName }}
                  key: {{ .Values.postgres.username }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretName }}
                  key: {{ .Values.postgres.password }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database }}